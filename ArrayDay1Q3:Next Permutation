Next Permutation 
link: https://leetcode.com/problems/next-permutation/description/

public class Main {
    static void reverse(int []a,int s,int e){
        for(;s<e;){
            swap(a,s,e);
            s++;e--;
        }
    }
    static void swap(int []a,int x,int y){
        int temp=a[x];
        a[x]=a[y];
        a[y]=temp;
    }
   
    static void next_permutation(int []a){
        int n,i,j;
        n=a.length;
        // now we will check the breaking point of this array which should in descending order
        for( i=n-2;i>=0;i--){
            if(a[i]<a[i+1]){
                break;
            }
        }
        //if ther is no break point then we will do full reverse of the array
        if(i<0){
            reverse(a,0,n-1);
        }
        else{
            // check next nearest greater element 
            for(j=n-1;j>i;j--){
                if(a[j]>a[i]){
                    break;
                }
            }
            swap(a,i,j);
            reverse(a,i+1,n-1);
        }
    }
    
    public static void main(String args[]) {
       // System.out.println("Hello World!");
       int a[]={2,6,7,5,3};// new array method 
       Main ob=new Main();
       ob.next_permutation(a);
       int i;
        for(i=0;i<a.length;i++){
            System.out.print(a[i]+" ");
        }
       
    }
}
